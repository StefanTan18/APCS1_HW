/*
  Richard Wong, collaborated with John Liu, Stefan Tan
  APCS1 pd8
  HW23 -- Etterbay Odingcay Oughthray Ollaborationcay
  2017-10-25  
*/

/***
 * class Pig
 * a Pig Latin translator
 * ~~~~~~~~~~~~~~~~~~~ SKELETON ~~~~~~~~~~~~~~~~~~~
 *           9
 *     ,--.-'-,--.
 *     \  /-~-\  /
 *    / )' a a `( \
 *   ( (  ,---.  ) )
 *    \ `(_o_o_)' /
 *     \   `-'   /
 *      | |---| |
 *      [_]   [_]
 *      PROTIP: Make this class compilable first,
 *      then develop and test one method at a time.
 *      NEVER STRAY TOO FAR FROM COMPILABILITY/RUNNABILITY!

 ~~~~~~~~~~~~~~~~~~~~TO-DO LIST~~~~~~~~~~~~~~~~~~~~
 * Capitalization
 add the capital letters 
 have a function that identifies if the word is capitalized, if it has it capitalizes the output of engToPig. 
 * Punctuation
 have a final String called punc with all the punctuation marks in the String.
 have a helper function include it in the engToPig where it identifies if it has a punctuation mark 
 and moves it to the appropriate location. 

***/
import java.util.Scanner;

public class Pig
{
    //Q: How does this initialization make your life easier?
    private static final String VOWELS = "aeiou";
    private static final String PUNCUATION = ".!?,:;";

    /*   It prevents accidental overwriting of the variable.
	 Easy to see and identify as a constant.
    */

    /*=====================================
      boolean hasA(String,String) -- checks for a letter in a String
      pre:  w != null, letter.length() == 1
      post: hasA("cat", "a") -> true
      hasA("cat", "p")       -> false
      =====================================*/
    public static boolean hasA( String w, String letter ) 
    {
	/* YOUR IMPLEMENTATION HERE */
	return w.indexOf(letter) != -1; // determines whether index of letter exists
    }//end hasA()


    /*=====================================
      boolean isAVowel(String) -- tells whether a letter is a vowel
      precondition: letter.length() == 1
      =====================================*/
    public static boolean isAVowel( String letter ) 
    {
	/* YOUR IMPLEMENTATION HERE */
	return hasA(VOWELS, letter); // helper method
    }


    /*=====================================
      int countVowels(String) -- counts vowels in a String
      pre:  w != null
      post: countVowels("meatball") -> 3
      =====================================*/
    public static int countVowels( String w ) 
    {
	/* YOUR IMPLEMENTATION HERE */
	int vowelCount = 0;
	for (int index = 0; index < w.length(); index++) // iterate
	    {
		String letter = w.substring(index, index + 1); // parse string
		if (isAVowel(letter)) // helper method to check if is vowel
		    vowelCount += 1; // increment by 1 if is vowel
	    }
	return vowelCount;
    }


    /*=====================================
      boolean hasAVowel(String) -- tells whether a String has a vowel
      pre:  w != null
      post: hasAVowel("cat") -> true
      hasAVowel("zzz")       -> false
      =====================================*/
    public static boolean hasAVowel( String w ) 
    {
	/* YOUR IMPLEMENTATION HERE */
	return countVowels(w) > 0; // helper method
    }

    // /*=====================================
    //   String allVowels(String) -- returns vowels in a String
    //   pre:  w != null
    //   post: allVowels("meatball") -> "eaa"
    //   =====================================*/
    public static String allVowels( String w ) 
    {
	/* YOUR IMPLEMENTATION HERE */
	String vowelStr = "";
	for (int index = 0; index < w.length(); index++) // iterate
	    {
		String letter = w.substring(index, index + 1); // parse string
		if (isAVowel(letter)) // helper method to check if is vowel
		    vowelStr += letter; // concatenate if is vowel
	    }
	return vowelStr;
    }

    // /*=====================================
    //   String firstVowel(String) -- returns first vowel in a String
    //   pre: w != null
    //   post: firstVowel("") --> ""
    //         firstVowel("zzz") --> ""
    //         firstVowel("meatball") --> "e"
    //   =====================================*/
    public static String firstVowel(String w){
	if (hasAVowel(w)){
	    return allVowels(w).substring(0,1);
	}
	return "";
    }

    // /*=====================================
    //   String beinsWithVowel(String) -- tells whether a String starts with a vowel
    //   pre: w != null and w.length() > 0
    //   post: beginsWithVowel("apple")  --> true
    //         beginsWithVowel("strong") --> false
    //   =====================================*/
    public static boolean beginsWithVowel(String w) {
	return isAVowel(w.substring(0,1));
    }

    // /*=====================================
    //   String engToPig(String) -- translates String to Pig Latin
    //   pre: w.length() > 0
    //   post: engToPig("apple")  --> "appleway"
    //         engToPig("strong") --> "ongstray"
    //         engToPig("java")   --> "avajay"
    //   =====================================*/
    /*   public static String engToPig(String w) {
	 if (!beginsWithVowel(w)) {
	 int indexOfVowel = w.indexOf(firstVowel(w));
	 String consonants = w.substring(0,indexOfVowel);
	 return w.substring(indexOfVowel) + consonants + "ay";
	 }
	 return w + "way";
	 }*/
    //code that works with y
    public static String engToPig(String w) {
	int indexOfY=w.indexOf("y");
	String firstLetter=w.substring(0,1);
	if (!hasA(PUNCUATION,w.substring(w.length()-1))){
	    if(firstLetter.equals(firstLetter.toLowerCase())) {
		if (!beginsWithVowel(w)&&(indexOfY<1||indexOfY>3)&&hasAVowel(w)) {
		    int indexOfVowel = w.indexOf(firstVowel(w));
		    String consonants = w.substring(0,indexOfVowel);
		    return w.substring(indexOfVowel) + consonants + "ay";
		}
		if (indexOfY>=1&&indexOfY<=3){
		    String consonants = w.substring(0,indexOfY);
		    return w.substring(indexOfY) + consonants + "ay";
		}
		return w + "way";
	    }
	    String lowerStr=engToPig(w.toLowerCase());
	    return lowerStr.substring(0,1).toUpperCase()+lowerStr.substring(1,lowerStr.length());
	}
	return engToPig(w.substring(0,w.length()-1))+w.substring(w.length()-1);
    }
    public static void main( String[] args ) 
    {
	Scanner sc = new Scanner(System.in);
	while( sc.hasNext() ) {
	    System.out.println( engToPig(sc.next()) );
	}
	/* YOUR TEST CALLS HERE
	System.out.println("----hasA----");
	System.out.println(hasA("cat", "c") + "...expecting true");
	System.out.println(hasA("cat", "a") + "...expecting true");
	System.out.println(hasA("cat", "t") + "...expecting true");
	System.out.println(hasA("cat", "p") + "...expecting false");

	System.out.println("\n----isAVowel----");
	System.out.println(isAVowel("a") + "...expecting true");
	System.out.println(isAVowel("e") + "...expecting true");
	System.out.println(isAVowel("i") + "...expecting true");
	System.out.println(isAVowel("o") + "...expecting true");
	System.out.println(isAVowel("u") + "...expecting true");
	System.out.println(isAVowel("b") + "...expecting false");

	System.out.println("\n----countVowels----");
	System.out.println(countVowels("meatball") + "...expecting 3");
	System.out.println(countVowels("zzz") + "...expecting 0");

	System.out.println("\n----hasAVowel----");
	System.out.println(hasAVowel("cat") + "...expecting true");
	System.out.println(hasAVowel("zzz") + "...expecting false");

	System.out.println("\n----allVowels----");
	System.out.println(allVowels("meatball") + "... expecting eaa");
	System.out.println(allVowels("qwrtyp") + "... expecting empty string");

	System.out.println("\n----firstVowel----");
	System.out.println(firstVowel("") + "... expecting empty string");
	System.out.println(firstVowel("zzz") + "... expecting empty string");
	System.out.println(firstVowel("meatball") + "... expecting e");

	System.out.println("\n----beginsWithVowel----");
	System.out.println(beginsWithVowel("apple") + "... expecting true");
	System.out.println(beginsWithVowel("strong") + "... expecting false");

	System.out.println("\n----engToPig----");
	System.out.println(engToPig("apple") + "... expecting appleway");
	System.out.println(engToPig("strong") + "... expecting ongstray");
	System.out.println(engToPig("java") + "... expecting avajay");
	System.out.println(engToPig("sky") + "... expecting yskay");
	System.out.println(engToPig("your") + "... expecting ouryay");
	System.out.println(engToPig("my") + "... expecting ymay");
	System.out.println(engToPig("myself") + "... expecting yselfmay");
	System.out.println(engToPig("spry") + "... expecting yspray");
	System.out.println(engToPig("Apple"));
	System.out.println(engToPig("Cat")); 
	System.out.println(engToPig("Happy"));
	System.out.println(engToPig("pygmy"));
	System.out.println(engToPig("car."));
	System.out.println(engToPig("Car."));
	*/

    }//end main()

}//end class Pig
